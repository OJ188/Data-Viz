attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
###### PLOTING Washington VALUES (for example)
#
state = "Washington"
Chosen_state = cbind.data.frame(as.Date(date[State==state]),
HighQ[State==state])
Chosen_state_names = c("Chosen_state_date","Chosen_state_HighQ")
names(Chosen_state) = Chosen_state_names
attach(Chosen_state)
label_Chosen_state = paste(c("Highest price in", state, ": 1oz.",max(HighQ),"$"),
collapse = " ")
label_dygraph = paste(c("Price fluctuation in", state,
collapse = " "))
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text", x=date[HighQ==max(HighQ)], y=max(HighQ),
label=label_Chosen_state) +
annotate(geom="point", x=date[HighQ==max(HighQ)],
y=max(HighQ), shape=21, size=10, fill="transparent")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text", x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)], y=max(Chosen_state_HighQ),
label=label_Chosen_state) +
annotate(geom="point", x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text", x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)], y=max(Chosen_state_HighQ),
label=label_Chosen_state)
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red")
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
###### PLOTING Washington VALUES (for example)
#
state = "Washington"
Chosen_state = cbind.data.frame(as.Date(date[State==state]),
HighQ[State==state])
Chosen_state_names = c("Chosen_state_date","Chosen_state_HighQ")
names(Chosen_state) = Chosen_state_names
attach(Chosen_state)
label_Chosen_state = paste(c("Highest price in", state, ": 1oz.",max(Chosen_state_HighQ),"$"),
collapse = " ")
label_dygraph = paste(c("Price fluctuation in", state,
collapse = " "))
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red")
Chosen_state_HighQ
Chosen_state_date
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
###### PLOTING Washington VALUES (for example)
#
state = "Washington"
Chosen_state = cbind.data.frame(as.Date(date[State==state]),
HighQ[State==state])
Chosen_state_names = c("Chosen_state_date","Chosen_state_HighQ")
names(Chosen_state) = Chosen_state_names
attach(Chosen_state)
Chosen_state_date
Chosen_state = cbind.data.frame(as.Date(df$date[df$State==state]),
df$HighQ[df$State==state])
Chosen_state_names = c("Chosen_state_date","Chosen_state_HighQ")
names(Chosen_state) = Chosen_state_names
attach(Chosen_state)
Chosen_state_date
label_Chosen_state = paste(c("Highest price in", state, ": 1oz.",max(Chosen_state_HighQ),"$"),
collapse = " ")
label_dygraph = paste(c("Price fluctuation in", state,
collapse = " "))
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text", x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)], y=max(Chosen_state_HighQ),
label=label_Chosen_state) +
annotate(geom="point", x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=(Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)] +
Chosen_state_date[Chosen_state_HighQ==min(Chosen_state_HighQ)]) /2,
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state) +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=(Chosen_state_date[ceiling(Chosen_state_HighQ==max(Chosen_state_HighQ)+
Chosen_state_HighQ==min(Chosen_state_HighQ))/2]),
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state) +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=(Chosen_state_date[ceiling(Chosen_state_HighQ==max(Chosen_state_HighQ)+
Chosen_state_HighQ==min(Chosen_state_HighQ))/2]),
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state) +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
summary(df)
summary(date)
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
# x=(Chosen_state_date[ceiling(Chosen_state_HighQ==max(Chosen_state_HighQ)+
# Chosen_state_HighQ==min(Chosen_state_HighQ))/2]),
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state) +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state,
color="red", size=4 , angle=0, fontface="bold", hjust=0) +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state,
color="red", fontface="bold") +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent")
label_title = paste(c("Price fluctuation in", state,
collapse = " "))
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state,
color="red", fontface="bold") +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent") +
xlab("Dates") +
ylab(label_title)
label_title = "Prices per once"
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state,
color="red", fontface="bold") +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent") +
xlab("Dates") +
ylab(label_title)
# Ploting
# Median state highlighted in orange
# Mean in blue
# Max and min circled in red
Mean_state %>%
arrange(Q) %>%
mutate(State=factor(State,State)) %>%
ggplot(aes(x=State, y=Q)) +
geom_segment( aes(x=State, xend=State, y=0, yend=Q),
color=ifelse((State==State[Q==median(Q)]), "orange", "skyblue"),
size=ifelse((State==State[Q==median(Q)]), 1.3, 0.7)) +
geom_point( color=ifelse((State==State[Q==median(Q)]), "orange", "red"),
size=3, fill=alpha("orange", 0.3), alpha=0.7, shape=21, stroke=2) +
theme_light() +
coord_flip() +
theme(
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
) +
ylab(label_y) +
annotate("text", x=State[Q==max(Q)], y=max(Q) - 130,
label=label_max, color="red") +
annotate(geom="point", State[Q==max(Q)], y=max(Q),
shape=21, size=10, fill="transparent", color="red") +
annotate("text", x=State[Q==min(Q)], y=150,
label=label_min, color="red") +
annotate(geom="point", State[Q==min(Q)], y=min(Q),
shape=21, size=10, fill="transparent", color="red") +
geom_hline(yintercept=mean(Q), color="blue", size=.5) +
annotate("text", x=State[Q==min(Q)], y=max(Q) - 90,
label=label_mean, color="blue", size=4, fontface="bold") +
annotate("text", x = State[Q==median(Q)], y = median(Q)*0.8,
label=label_median, color="black", size=4 , angle=0, fontface="bold", hjust=0)
# 1) HighQ 2) MedQ 3) LowQ 4) Average of the 3
# Choix = 1
# Choix = 2
# Choix = 3
Choix = 4
# Quality choice
if(Choix==1)
{
Mean_state = data.frame(aggregate(HighQ~State, data=df,
FUN=function(df)
c(mean=mean(df), count=length(df))))
Mean_state$HighQ = Mean_state$HighQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$HighQ
title = "High Quality"
}
if(Choix==2)
{
Mean_state = data.frame(aggregate(MedQ~State, data=df,
FUN=function(df)
c(mean=mean(df), count=length(df))))
Mean_state$MedQ = Mean_state$MedQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$MedQ
title = "Medium Quality"
}
if(Choix==3)
{
Mean_state = data.frame(aggregate(LowQ~State, data=df,
FUN=function(df)
c(mean=mean(df), count=length(df))))
Mean_state$LowQ = Mean_state$LowQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$LowQ
title = "Low Quality"
}
if(Choix==4)
{
Mean_state = data.frame(aggregate(
(HighQ+MedQ+LowQ)/3~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$X.HighQ...MedQ...LowQ..3 = Mean_state$X.HighQ...MedQ...LowQ..3[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$X.HighQ...MedQ...LowQ..3
title = "Average of the 3 qualities"
}
# Setting the labels
State = as.character(Mean_state$State)
label_max = paste(c(State[Q==max(Q)],":", ceiling(max(Q)),"$/oz."), collapse = " ")
label_mean = paste(c("Mean :", ceiling(mean(Q)),"$/oz."), collapse = " ")
label_min = paste(c(State[Q==min(Q)], ceiling(min(Q)),"$/oz."), collapse = " ")
label_median = paste(c("Median :", State[Q==median(Q)],
"with", ceiling(median(Q)),"$/oz."), collapse = " ")
label_y = paste(c("Mean price per state :", title), collapse = " ")
# Ploting
# Median state highlighted in orange
# Mean in blue
# Max and min circled in red
Mean_state %>%
arrange(Q) %>%
mutate(State=factor(State,State)) %>%
ggplot(aes(x=State, y=Q)) +
geom_segment( aes(x=State, xend=State, y=0, yend=Q),
color=ifelse((State==State[Q==median(Q)]), "orange", "skyblue"),
size=ifelse((State==State[Q==median(Q)]), 1.3, 0.7)) +
geom_point( color=ifelse((State==State[Q==median(Q)]), "orange", "red"),
size=3, fill=alpha("orange", 0.3), alpha=0.7, shape=21, stroke=2) +
theme_light() +
coord_flip() +
theme(
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
) +
ylab(label_y) +
annotate("text", x=State[Q==max(Q)], y=max(Q) - 130,
label=label_max, color="red") +
annotate(geom="point", State[Q==max(Q)], y=max(Q),
shape=21, size=10, fill="transparent", color="red") +
annotate("text", x=State[Q==min(Q)], y=150,
label=label_min, color="red") +
annotate(geom="point", State[Q==min(Q)], y=min(Q),
shape=21, size=10, fill="transparent", color="red") +
geom_hline(yintercept=mean(Q), color="blue", size=.5) +
annotate("text", x=State[Q==min(Q)], y=max(Q) - 90,
label=label_mean, color="blue", size=4, fontface="bold") +
annotate("text", x = State[Q==median(Q)], y = median(Q)*0.8,
label=label_median, color="black", size=4 , angle=0, fontface="bold", hjust=0)
df
df %>%
filter(State=="Nevada" ) %>%
ggplot( aes(x=date, y=HighQN)) +
geom_line()
# Kangda graphs2(treemap 2014-01-01)
df1=read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".")
df2=df1[c(1:51),]
df2$date <- as.Date(df2$date)
treemap(df2,
index="State",
vSize="HighQN",
title="Treemap: HighQN of all the states in 2014-01-01",
fontsize.title=12,
cex = 0.5,
type="index"
)
treemap(df2,
index="State",
vSize="LowQ",
title="Treemap: LowQ of all the states in 2014-01-01",
fontsize.title=12,
cex = 0.5,
type="index"
)
# Ploting treemap
treemap(df2,
index="State",
vSize="HighQN",
title="Treemap: HighQN of all the states in 2014-01-01",
fontsize.title=12,
cex = 0.5,
type="index"
)
df %>%
filter(State=="Nevada" ) %>%
ggplot( aes(x=date, y=HighQN)) +
geom_line()
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, fig.align="center", error=FALSE, message = FALSE)
#  Kangda graphs1(Tendance de la croissance Nevada HighQN)
df$date <- as.Date(df$date)
#  Kangda graphs1(Tendance de la croissance Nevada HighQN)
df$date <- as.Date(df$date)
df %>%
filter(State=="Nevada" ) %>%
ggplot( aes(x=date, y=HighQN)) +
geom_line()
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
df = na.locf(df)
df1=read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".")
df2=df1[c(1:51),]
df2$date <- as.Date(df2$date)
datatable(df2, rownames = FALSE, filter = "top", options = list(pagelength=5,scrollX=T))
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state,
color="red", fontface="bold") +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent") +
xlab("Dates") +
ylab(label_title)
###### PLOTING Washington VALUES (for example)
#
state = "Washington"
Chosen_state = cbind.data.frame(as.Date(df$date[df$State==state]),
df$HighQ[df$State==state])
Chosen_state_names = c("Chosen_state_date","Chosen_state_HighQ")
names(Chosen_state) = Chosen_state_names
attach(Chosen_state)
label_Chosen_state = paste(c("Highest price in", state,
": 1oz.",max(Chosen_state_HighQ),"$"),
collapse = " ")
label_dygraph = paste(c("Price fluctuation in", state,
collapse = " "))
label_title = "Prices per once (in dollar)"
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state,
color="red", fontface="bold") +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent") +
xlab("Dates") +
ylab(label_title)
# Interactive graph
don <- xts(x = Chosen_state_HighQ, order.by = Chosen_state_date)
# graph
dygraph(don, main=label_dygraph) %>%
dyOptions(labelsUTC = TRUE, fillGraph=TRUE, fillAlpha=0.1,
drawGrid = FALSE, colors="#D8AE5A") %>%
dyRangeSelector() %>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)  %>%
dyRoller(rollPeriod = 1)
# Ploting Washington
ggplot(Chosen_state, aes(Chosen_state_date, Chosen_state_HighQ)) +
geom_line() +
ylim(min(Chosen_state_HighQ)-0.2*min(Chosen_state_HighQ),
max(Chosen_state_HighQ)+0.2*max(Chosen_state_HighQ)) +
geom_area(color="black", fill="red") +
annotate("text",
x=Chosen_state_date[Chosen_state_date=="2014-08-09"],
y=max(Chosen_state_HighQ)*1.1, label=label_Chosen_state,
color="red", fontface="bold") +
annotate(geom="point",
x=Chosen_state_date[Chosen_state_HighQ==max(Chosen_state_HighQ)],
y=max(Chosen_state_HighQ), shape=21, size=10, fill="transparent") +
xlab("Dates") +
ylab(label_title)
# Interactive graph
don <- xts(x = Chosen_state_HighQ, order.by = Chosen_state_date)
# graph
dygraph(don, main=label_dygraph) %>%
dyOptions(labelsUTC = TRUE, fillGraph=TRUE, fillAlpha=0.1,
drawGrid = FALSE, colors="#D8AE5A") %>%
dyRangeSelector() %>%
dyCrosshair(direction = "vertical") %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)  %>%
dyRoller(rollPeriod = 1)
library(DT)
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
df = na.locf(df)
df1=read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".")
df2=df1[c(1:51),]
df2$date <- as.Date(df2$date)
datatable(df2, rownames = FALSE, filter = "top", options = list(pagelength=5,scrollX=T))
###### US map (this code was shamefully copied from
# https://plot.ly/r/choropleth-maps/)
# Showing mean of the 3 qualities and mean of each quality
# Reload to avoid problems
dft = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(dft)
dft = dft[!(State =="District of Columbia"),]
State = unique(dft$State)
date <- as.Date(date)
