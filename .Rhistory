geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=x[max(value)], y=max(value), label=("Bitcoin value over time"))
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=as.Date(date[max(value)], y=max(value), label=("Bitcoin value over time"))
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value), y=max(value), label=("Bitcoin value over time"))
max(c(12,154))
max(value)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
#ggplot( aes(x=gdpPercap, y=lifeExp, fill=continent, size=pop, alpha = 0.01)) +
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time")) +
geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
#ggplot( aes(x=gdpPercap, y=lifeExp, fill=continent, size=pop, alpha = 0.01)) +
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time")) +
#geom_point(alpha=0.7, stroke="white", shape=21)
ggplotly(data3)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
#ggplot( aes(x=gdpPercap, y=lifeExp, fill=continent, size=pop, alpha = 0.01)) +
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time")) +
#geom_point(alpha=0.7, stroke="white", shape=21)
#ggplotly(data3)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
#ggplot( aes(x=gdpPercap, y=lifeExp, fill=continent, size=pop, alpha = 0.01)) +
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
#geom_point(alpha=0.7, stroke="white", shape=21)
#ggplotly(data3)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
#ggplot( aes(x=gdpPercap, y=lifeExp, fill=continent, size=pop, alpha = 0.01)) +
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
#geom_point(alpha=0.7, stroke="white", shape=21)
#ggplotly(data3)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
#ggplot( aes(x=gdpPercap, y=lifeExp, fill=continent, size=pop, alpha = 0.01)) +
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate("text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
#geom_point(alpha=0.7, stroke="white", shape=21)
ggplotly(data3)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[max(value)], y=max(value))
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[max(value)], y=max(value))
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[max(value)], y=max(value), shape=21, fill="blue", color="black")
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=as.Date(date[max(value)]), y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[max(value)], y=max(value), shape=21, fill="blue", color="black")
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)], y=max(value), shape=21, fill="blue", color="black")
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)-100], y=max(value), shape=21, fill="blue", color="black")
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)-10], y=max(value), shape=21, fill="blue", color="black")
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)], y=max(value), shape=21, fill="blue", color="black")
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)], y=max(value), shape=21, fill=inside, color=stroke)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)], y=max(value), shape=21, fill=inside, stroke="white")
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)], y=max(value), shape=21, fill="blue", stroke="white")
#geom_point(alpha=0.7, stroke="white", shape=21)
# Load dataset from github
data3 <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data3$date <- as.Date(data3$date)
attach(data3)
# plot
summary(data3)
ggplot(data3, aes(date, value)) +
geom_line() +
geom_area(color="black", fill="red") +
annotate(geom ="text", x=date[value==max(value)], y=max(value), label=("Bitcoin value over time"))
annotate(geom="point", x=date[value==max(value)], y=max(value), shape=21, size=10, fill="transparent")
#geom_point(alpha=0.7, stroke="white", shape=21)
Q = HighQ
setwd("C:/Users/Théo/Desktop/GitHub/Weed-Veez")
# Library
library(zoo)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(plotly)
library(tidyverse)
library(dygraphs)
library(xts)          # To make the convertion data-frame / xts format
library(lubridate)
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
Q = HighQ
###### Violin plot
df %>%
mutate(State = fct_reorder(State, Q, .fun = median)) %>%
ggplot(aes(x=State, y=Q, fill=State)) +
geom_violin() +
geom_jitter(color="grey", width=.2, size=.9, alpha=.8) +
theme(
legend.position = "none"
) +
coord_flip()
###### Violin plot
df %>%
mutate(State = fct_reorder(State, Q, .fun = median)) %>%
ggplot(aes(x=State, y=Q, fill=State)) +
geom_violin() +
geom_jitter(color="grey", width=.2, size=.9, alpha=.8) +
theme(
legend.position = "none"
) +
coord_flip()
Q = HighQ[1:10]
###### Violin plot
df %>%
mutate(State = fct_reorder(State, Q, .fun = median)) %>%
ggplot(aes(x=State, y=Q, fill=State)) +
geom_violin() +
geom_jitter(color="grey", width=.2, size=.9, alpha=.8) +
theme(
legend.position = "none"
) +
coord_flip()
Mean_state = data.frame(aggregate(MedQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Violin = data.frame(rbind(State,MedQ))
Violin=Violin[order(Violin[,2]),]
attach(Violin)
MedQ_violin = MedQ[1:10]
State_violin = State[1:10]
head(MedQ_violin)
MedQ_violin
# 1) HighQ 2) MedQ 3) LowQ 4) Average of the 3
# Choix = 1
Choix = 2
if(Choix==1)
{
Mean_state = data.frame(aggregate(HighQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$HighQ = Mean_state$HighQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$HighQ
title = "High Quality"
}
if(Choix==2)
{
Mean_state = data.frame(aggregate(MedQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$MedQ = Mean_state$MedQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$MedQ
title = "Medium Quality"
}
if(Choix==3)
{
Mean_state = data.frame(aggregate(LowQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$LowQ = Mean_state$LowQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$LowQ
title = "Low Quality"
}
if(Choix==4)
{
Mean_state = data.frame(aggregate(
(HighQ+MedQ+LowQ)/3~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$X.HighQ...MedQ...LowQ..3 = Mean_state$X.HighQ...MedQ...LowQ..3[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$X.HighQ...MedQ...LowQ..3
title = "Average of the 3 qualities"
}
State = as.character(Mean_state$State)
label_max = paste(c(State[Q==max(Q)],":", ceiling(max(Q)),"$/oz."), collapse = " ")
label_mean = paste(c("Mean :", ceiling(mean(Q)),"$/oz."), collapse = " ")
label_min = paste(c(State[Q==min(Q)], ceiling(min(Q)),"$/oz."), collapse = " ")
label_median = paste(c("Median :", State[Q==median(Q)],"with", ceiling(median(Q)),"$/oz."), collapse = " ")
label_y = paste(c("Mean price per state :", title), collapse = " ")
Mean_state %>%
arrange(Q) %>%
mutate(State=factor(State,State)) %>%
ggplot(aes(x=State, y=Q)) +
geom_segment( aes(x=State, xend=State, y=0, yend=Q),
color=ifelse((State==State[Q==median(Q)]), "orange", "skyblue"),
size=ifelse((State==State[Q==median(Q)]), 1.3, 0.7)) +
geom_point( color=ifelse((State==State[Q==median(Q)]), "orange", "red"),
size=3, fill=alpha("orange", 0.3), alpha=0.7, shape=21, stroke=2) +
theme_light() +
coord_flip() +
theme(
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
) +
ylab(label_y) +
annotate("text", x=State[Q==max(Q)], y=max(Q) - 130,
label=label_max, color="red") +
annotate(geom="point", State[Q==max(Q)], y=max(Q),
shape=21, size=10, fill="transparent", color="red") +
annotate("text", x=State[Q==min(Q)], y=150,
label=label_min, color="red") +
annotate(geom="point", State[Q==min(Q)], y=min(Q),
shape=21, size=10, fill="transparent", color="red") +
geom_hline(yintercept=mean(Q), color="blue", size=.5) +
annotate("text", x=State[Q==min(Q)], y=max(Q) - 90,
label=label_mean, color="blue", size=4, fontface="bold") +
annotate("text", x = State[Q==median(Q)], y = median(Q)*0.8,
label=label_median, color="black", size=4 , angle=0, fontface="bold", hjust=0)
###### OTHER FUNCTIONS
sum(is.na(LowQN))
Mean_state = data.frame(aggregate(MedQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Violin = data.frame(rbind(State,MedQ))
Violin=Violin[order(Violin[,2]),]
attach(Violin)
MedQ_violin = MedQ[1:10]
State_violin = State[1:10]
MedQ_violin
State_violin
Violin = data.frame(cbind(State,MedQ))
Violin=Violin[order(Violin[,2]),]
attach(Violin)
MedQ_violin = MedQ[1:10]
State_violin = State[1:10]
MedQ_violin
length(MedQ_violin)
summary(df)
head(df)
df_Alabama = df[State=="Alabama"]
df_Alabama = df[df$State=="Alabama"]
df
State
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
df_Alabama = df[df$State=="Alabama"]
df_Alabama = df[State=="Alabama"]
str(State)
df[State=="Alabama"]
State[State=="Alabama"]
HighQ[State=="Alabama"]
df[df$State == "Alabama", df]
df[State == "Alabama", df]
df[State == "Alabama", HighQ]
df[df$State == "Alabama", HighQ]
df[df$State == "Alabama", df$HighQ]
df[ which(State == "Alabama"), df]
subset(HighQ, State == "Alabama")
subset(df, State == "Alabama")
States_list = c("Alabama","Indiana","Iowa","Wyoming","Mississippi")
df_violin = c()
for(i in States_list)
{
df_violin = rdinb(df_violin,subset(df, State == i))
}
for(i in States_list)
{
df_violin = rbind(df_violin,subset(df, State == i))
}
# Mean_state = data.frame(aggregate(MedQ~State, data=df,
# FUN=function(df) c(mean=mean(df), count=length(df))))
df_violin = data.frame(df_violin)
# df_violin=df_violin[order(Violin[,2]),]
attach(Violin)
summary(df_violin)
length(State*)
length(State)
length(HighQ)
subset(df, State == "Alabama")
str(subset(df, State == "Alabama"))
df_violin = data.frame(c())
for(i in States_list)
{
df_violin = cbind(df_violin,subset(df, State == i))
}
df_violin = data.frame()
for(i in States_list)
{
df_violin = cbind(df_violin,subset(df, State == i))
}
States_list = c("Indiana","Iowa","Wyoming","Mississippi")
df_violin = data.frame(subset(df, State == "Alabama"))
for(i in States_list)
{
df_violin = cbind(df_violin,subset(df, State == i))
}
# Mean_state = data.frame(aggregate(MedQ~State, data=df,
# FUN=function(df) c(mean=mean(df), count=length(df))))
df_violin = data.frame(df_violin)
# df_violin=df_violin[order(Violin[,2]),]
attach(Violin)
summary(df_violin)
State
Violin$Stata
Violin$State
# df_violin=df_violin[order(Violin[,2]),]
attach(df_violin)
summary(df_violin)
length(df_violin)
nrow(df_violin)
ncol(df_violin)
for(i in States_list)
{
df_violin = rbind(df_violin,subset(df, State == i))
}
State.4
