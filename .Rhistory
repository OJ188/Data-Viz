df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
df = df[!(State =="District of Columbia"),]
State = unique(State)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
df$HighQ = Mean_state$HighQ[1:51]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$MedQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
df$MedQ = Mean_state$MedQ[1:51]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$LowQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
df$LowQ = Mean_state$LowQ[1:51]
library(plotly)
setwd("C:/Users/Théo/Desktop/GitHub/Weed-Veez")
dfm = read.table("USmap.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = FALSE)
# dfm = read.table("USmap.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = FALSE)
dfr <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
"Low Quality", df$LowQ))
dfr$hover
length(dfr$hover)
nrows(dfr$hover)
nrow(dfr$hover)
ncol(dfr$hover)
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
"Low Quality", df$LowQ))
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
"Low Quality", df$LowQ)
length(df$STate)
nrow(df$STate)
length(df$State)
df$State = unique(df$State)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
df = df[!(State =="District of Columbia"),]
df$State = unique(df$State)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(df$State,df$date)),]
na.locf(df)
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
df$HighQ = Mean_state$HighQ[1:51]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$MedQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
df$MedQ = Mean_state$MedQ[1:51]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$LowQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
df$LowQ = Mean_state$LowQ[1:51]
length(df$State)
df$State = unique(df$State)
length(df$State)
unique(df$State)
State = unique(df$State)
State
length(State)
State = unique(df$State)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,df$date)),]
na.locf(df)
df = df[!(State =="District of Columbia"),]
State = unique(df$State)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,df$date)),]
na.locf(df)
Mean_state = data.frame(aggregate(HighQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state = data.frame(aggregate(HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
HighQ = Mean_state$HighQ[1:51]
length(HighQ)
nrow(HighQ)
ncol(HighQ)
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
HighQ = Mean_state$HighQ[1:51]
HighQ
Mean_state
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
df = df[!(State =="District of Columbia"),]
# State = unique(df$State)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,df$date)),]
na.locf(df)
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
HighQ = Mean_state$df.HighQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$MedQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
MedQ = Mean_state$df.MedQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$LowQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
LowQ = Mean_state$df.LowQ[1:50]
State
HighQ
# Mean_state=Mean_state[order(Mean_state[,2]),]
State = unique(df$State)
State
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
df = df[!(State =="District of Columbia"),]
# State = unique(df$State)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,df$date)),]
na.locf(df)
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
HighQ = Mean_state$df.HighQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$MedQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
MedQ = Mean_state$df.MedQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$LowQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
LowQ = Mean_state$df.LowQ[1:50]
# dfm = read.table("USmap.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = FALSE)
dfr <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
"Low Quality", df$LowQ)
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
"Low Quality", df$LowQ)
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(State, "<br>", "High Quality", HighQ, "Medium Quality", MedQ,
"Low Quality", LowQ)
State
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
df = df[!(State =="District of Columbia"),]
State = unique(df$State)
State
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,df$date)),]
na.locf(df)
HighQ = Mean_state$df.HighQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$MedQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
MedQ = Mean_state$df.MedQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$LowQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
# Mean_state=Mean_state[order(Mean_state[,2]),]
df = df[!(State =="District of Columbia"),]
LowQ = Mean_state$df.LowQ[1:50]
State = unique(df$State)
library(plotly)
setwd("C:/Users/Théo/Desktop/GitHub/Weed-Veez")
# library(plotly)
# setwd("C:/Users/Théo/Desktop/GitHub/Weed-Veez")
# dfm = read.table("USmap.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = FALSE)
dfr <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(State, "<br>", "High Quality", HighQ, "Medium Quality", MedQ,
"Low Quality", LowQ)
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
na.locf(df)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,df$date)),]
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
HighQ = Mean_state$df.HighQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$MedQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
MedQ = Mean_state$df.MedQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$LowQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
LowQ = Mean_state$df.LowQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
df = df[!(State =="District of Columbia"),]
State = unique(df$State)
State
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
df = df[!(State =="District of Columbia"),]
State = unique(df$State)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,df$date)),]
na.locf(df)
Mean_state = data.frame(aggregate(df$HighQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
HighQ = Mean_state$df.HighQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$MedQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
MedQ = Mean_state$df.MedQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
Mean_state = data.frame(aggregate(df$LowQ~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
LowQ = Mean_state$df.LowQ[1:50]
# Mean_state=Mean_state[order(Mean_state[,2]),]
df = df[!(State =="District of Columbia"),]
State = unique(df$State)
# library(plotly)
# setwd("C:/Users/Théo/Desktop/GitHub/Weed-Veez")
# dfm = read.table("USmap.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = FALSE)
dfr <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(State, "<br>", "High Quality", HighQ, "Medium Quality", MedQ,
"Low Quality", LowQ)
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dfr, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "$/oz.") %>%
layout(
title = 'Mean of weed prices per state ($/oz.)',
geo = g
)
p
p <- plot_geo(dfr, locationmode = 'USA-states') %>%
# add_trace(
#   z = ~total.exports, text = ~hover, locations = ~code,
#   color = ~total.exports, colors = 'Purples'
# ) %>%
add_trace(
text = ~hover, locations = ~code,
color = ~hover, colors = 'Purples'
) %>%
colorbar(title = "$/oz.") %>%
layout(
title = 'Mean of weed prices per state ($/oz.)',
geo = g
)
p <- plot_geo(dfr, locationmode = 'USA-states') %>%
# add_trace(
#   z = ~total.exports, text = ~hover, locations = ~code,
#   color = ~total.exports, colors = 'Purples'
# ) %>%
add_trace(
text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "$/oz.") %>%
layout(
title = 'Mean of weed prices per state ($/oz.)',
geo = g
)
# library(plotly)
# setwd("C:/Users/Théo/Desktop/GitHub/Weed-Veez")
# dfm = read.table("USmap.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = FALSE)
dfr <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
# dfr$hover <- with(df, paste(df$State, "<br>", "High Quality", df$HighQ, "Medium Quality", df$MedQ,
# "Low Quality", df$LowQ))
dfr$hover = paste(State, "<br>", "High Quality", HighQ, "Medium Quality", MedQ,
"Low Quality", LowQ)
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dfr, locationmode = 'USA-states') %>%
# add_trace(
#   z = ~total.exports, text = ~hover, locations = ~code,
#   color = ~total.exports, colors = 'Purples'
# ) %>%
add_trace(
text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "$/oz.") %>%
layout(
title = 'Mean of weed prices per state ($/oz.)',
geo = g
)
p <- plot_geo(dfr, locationmode = 'USA-states') %>%
# add_trace(
#   z = ~total.exports, text = ~hover, locations = ~code,
#   color = ~total.exports, colors = 'Purples'
# ) %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "$/oz.") %>%
layout(
title = 'Mean of weed prices per state ($/oz.)',
geo = g
)
dfr$total.exports
dfr$state
Mean_state = data.frame(aggregate(
(df$HighQ+df$MedQ+df$LowQ)/3~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
MeanQ = Mean_state$X.df.HighQ...df.MedQ...df.LowQ..3[1:50]
Mean_state = data.frame(aggregate(
(df$HighQ+df$MedQ+df$LowQ)/3~df$State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
MeanQ = Mean_state$X.df.HighQ...df.MedQ...df.LowQ..3[1:50]
p <- plot_geo(dfr, locationmode = 'USA-states') %>%
# add_trace(
#   z = ~total.exports, text = ~hover, locations = ~code,
#   color = ~total.exports, colors = 'Purples'
# ) %>%
add_trace(
z = ~MeanQ, text = ~hover, locations = ~code,
color = ~MeanQ, colors = 'Purples'
) %>%
colorbar(title = "$/oz.") %>%
layout(
title = 'Mean of weed prices per state ($/oz.)',
geo = g
)
p
# 1) HighQ 2) MedQ 3) LowQ 4) Average of the 3
# Choix = 1
# Choix = 2
# Choix = 3
Choix = 4
if(Choix==1)
{
Mean_state = data.frame(aggregate(HighQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$HighQ = Mean_state$HighQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$HighQ
title = "High Quality"
}
if(Choix==2)
{
Mean_state = data.frame(aggregate(MedQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$MedQ = Mean_state$MedQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$MedQ
title = "Medium Quality"
}
{
Mean_state = data.frame(aggregate(LowQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$LowQ = Mean_state$LowQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$LowQ
title = "Low Quality"
}
if(Choix==3)
if(Choix==4)
{
Mean_state = data.frame(aggregate(
(HighQ+MedQ+LowQ)/3~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$X.HighQ...MedQ...LowQ..3 = Mean_state$X.HighQ...MedQ...LowQ..3[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$X.HighQ...MedQ...LowQ..3
title = "Average of the 3 qualities"
}
State = as.character(Mean_state$State)
label_max = paste(c(State[Q==max(Q)],":", ceiling(max(Q)),"$/oz."), collapse = " ")
label_mean = paste(c("Mean :", ceiling(mean(Q)),"$/oz."), collapse = " ")
label_min = paste(c(State[Q==min(Q)], ceiling(min(Q)),"$/oz."), collapse = " ")
label_median = paste(c("Median :", State[Q==median(Q)],"with", ceiling(median(Q)),"$/oz."), collapse = " ")
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
###### PLOTING Washington VALUES
Washington = cbind.data.frame(as.Date(date[State=="Washington"]),
HighQ[State=="Washington"])
Washington_names = c("Washington_date","Washington_HighQ")
names(Washington) = Washington_names
attach(Washington)
###### OPENING FILE
df = read.table("Weed_Price.csv",header=TRUE,sep=",",dec=".",stringsAsFactors = TRUE)
attach(df)
date <- as.Date(date)
###### COMPLETING MISSING VALUES WITH LAST NONE NA VALUE
df = df[with(df, order(State,date)),]
na.locf(df)
# 1) HighQ 2) MedQ 3) LowQ 4) Average of the 3
# Choix = 1
# Choix = 2
# Choix = 3
Choix = 4
if(Choix==1)
{
Mean_state = data.frame(aggregate(HighQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$HighQ = Mean_state$HighQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$HighQ
title = "High Quality"
}
if(Choix==2)
{
Mean_state = data.frame(aggregate(MedQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$MedQ = Mean_state$MedQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$MedQ
title = "Medium Quality"
}
if(Choix==3)
{
Mean_state = data.frame(aggregate(LowQ~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$LowQ = Mean_state$LowQ[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$LowQ
title = "Low Quality"
}
if(Choix==4)
{
Mean_state = data.frame(aggregate(
(HighQ+MedQ+LowQ)/3~State, data=df,
FUN=function(df) c(mean=mean(df), count=length(df))))
Mean_state$X.HighQ...MedQ...LowQ..3 = Mean_state$X.HighQ...MedQ...LowQ..3[1:51]
Mean_state=Mean_state[order(Mean_state[,2]),]
Q = Mean_state$X.HighQ...MedQ...LowQ..3
title = "Average of the 3 qualities"
}
State = as.character(Mean_state$State)
label_max = paste(c(State[Q==max(Q)],":", ceiling(max(Q)),"$/oz."), collapse = " ")
label_mean = paste(c("Mean :", ceiling(mean(Q)),"$/oz."), collapse = " ")
label_min = paste(c(State[Q==min(Q)], ceiling(min(Q)),"$/oz."), collapse = " ")
label_median = paste(c("Median :", State[Q==median(Q)],"with", ceiling(median(Q)),"$/oz."), collapse = " ")
label_y = paste(c("Mean price per state :", title), collapse = " ")
Mean_state %>%
arrange(Q) %>%
mutate(State=factor(State,State)) %>%
ggplot(aes(x=State, y=Q)) +
geom_segment( aes(x=State, xend=State, y=0, yend=Q),
color=ifelse((State==State[Q==median(Q)]), "orange", "skyblue"),
size=ifelse((State==State[Q==median(Q)]), 1.3, 0.7)) +
geom_point( color=ifelse((State==State[Q==median(Q)]), "orange", "red"),
size=3, fill=alpha("orange", 0.3), alpha=0.7, shape=21, stroke=2) +
theme_light() +
coord_flip() +
theme(
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
) +
ylab(label_y) +
annotate("text", x=State[Q==max(Q)], y=max(Q) - 130,
label=label_max, color="red") +
annotate(geom="point", State[Q==max(Q)], y=max(Q),
shape=21, size=10, fill="transparent", color="red") +
annotate("text", x=State[Q==min(Q)], y=150,
label=label_min, color="red") +
annotate(geom="point", State[Q==min(Q)], y=min(Q),
shape=21, size=10, fill="transparent", color="red") +
geom_hline(yintercept=mean(Q), color="blue", size=.5) +
annotate("text", x=State[Q==min(Q)], y=max(Q) - 90,
label=label_mean, color="blue", size=4, fontface="bold") +
annotate("text", x = State[Q==median(Q)], y = median(Q)*0.8,
label=label_median, color="black", size=4 , angle=0, fontface="bold", hjust=0)
p
